(6)-----------------------------------------------------------------------------
  a- end absoluto próx 2 instruções
    1) prox instrução: CS:IP =>(16x2000)+200=32200
       end = (cs << 3) | ip == 16xCS+IP

    2) ip = 204
      cs:ip = (16*2000) + 204 = 32204

  b-             MOV DX, 40 => DX<-40
     AX= BX, <=> MOV AX, BX => AX<-20
     AX=*BX, <=> MOV AX,(BX)=> AX<-mem[DS:BX]=mem[1620]
                               AX<-2620
                               DS=100,BX=20 .:. DX:BX=(16X100)+20 = 1620
                 ADD BX, CS => BX += CX = 50

(7)-----------------------------------------------------------------------------
  MOV  AX,1  => AX<-1
  MOVB CL,8  => CL<-8
  SHL  AX,CL => AX <- AX<<CL = 1 << 8 = 2^(8) = 256

(8)-----------------------------------------------------------------------------
  MOV CX,10 => CX<-10
  MOV AX,1  => AX<-1

  inicio:
    SHL AX,1    => AX <- AX<<1 == AX * 2
    LOOP INICIO => CX--; if(CX > 0) goto inicio;

  (AX = 1 << 10 = 1024)

(9)-----------------------------------------------------------------------------
  MOV AX, (x) => AX = X (tratando x como variável, não como ponteiro)
  DEC AX      => AX--
  MOV (x), AX => X = AX

  resultado final dessa história => x--

(10)----------------------------------------------------------------------------
  MOV  AX, 250  => AX <- 250
  ADD  AX, 10   => AX <- 260 (AH = 1; AL = 4)
  MOVB (x), AL  => x  <- 4
  MOVB (y), AH  => y  <- 1

(11)----------------------------------------------------------------------------
  MOV  AX,  532  => AX <- 532 (AH = 2, AL = 20)
  ADDB AH,  10   => AH <- 12  (AX = (12*256) + 20 = 3092)
  MOV  (x), AX   => x  <- 3092

(12)----------------------------------------------------------------------------
  MOV  AX,255 => AX <- 255
  INCB AL     => AL <- 0
  MOVB (x),AL => x  <- 0
  MOVB (y),AH => y  <- 0

(13)----------------------------------------------------------------------------
  MOV  AX,25  => AX <- 25
  MOV  BX,40  => BX <- 40
  IMUL BX     => AX <- DX:AX * BX = 1000 (AX = 1000, DX = 0)
  MOV  (x),AX => X  <- 1000
  MOV  (y),DX => y  <- 0

(14)----------------------------------------------------------------------------
  MOV  AX,2000 => AX <-2000
  MOV  BX,34   => BX <-34
  IMUL BX      => DX:AX <- AX * BX = 68000/65536 .:. AX=2464, DX=1
  MOV  (x),AX  => x <- 2464
  MOV  (y),DX  => y <- 1

(15)----------------------------------------------------------------------------
  MOV AX, 10  => AX <- 10
  MOV BX, (x) => BX <- x
  CMP AX, BX  => if(AX < BX) goto 1f;
  JB  1f
  MOV (x), AX => x <- AX

  if(x < 10)
    x = 10

  x = max(x, 10)
